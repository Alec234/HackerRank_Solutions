using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     * Code written by Alec Symmonds
     * Link for problem description: https://www.hackerrank.com/challenges/migratory-birds/problem
     */

    public static int migratoryBirds(List<int> arr)
    {
        Dictionary<int, int> dict = new Dictionary<int, int>();
        int maxFreq = 0;
        int minVal = 0;
        foreach(int i in arr)
        {
            if (dict.ContainsKey(i))
            {
                dict[i]++;
            }
            else dict.Add(i, 1);
            
            if(dict[i]>maxFreq)
            {
                maxFreq++;
                minVal = i;
            }
            if(dict[i]==maxFreq)
                minVal = i<minVal?i:minVal;
        }
        return minVal;  
    }
}


//Hackerrank provided code
class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int arrCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();

        int result = Result.migratoryBirds(arr);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
